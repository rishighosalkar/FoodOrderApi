# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

# pool:
#   vmImage: 'windows-latest'
pool: sw-1z

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  serviceConnection: FoodOrderAppServiceConnection
  webAppName: FoodOrderApiService

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.x'  # Replace with your desired .NET 6 version

    - script: dotnet restore
      displayName: 'Restore NuGet Packages'

    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'Build Solution'

    # - task: DotNetCoreCLI@2
    #   inputs:
    #     command: 'test'
    #     projects: '**/*Tests.csproj'
    #     arguments: '--configuration $(buildConfiguration)'
    #   displayName: 'Run Tests'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        projects: '**/*.csproj'
        arguments: '-o $(Build.ArtifactStagingDirectory)/publish --configuration $(BuildConfiguration)'
        zipAfterPublish: true
      displayName: 'Publish Artifact'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  jobs:
  - deployment: DeployJob
    displayName: 'Deploy Job'
    environment: 'prod'  # Replace with your environment name
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: '$(serviceConnection)'  # Replace with your Azure service connection name
              appType: 'webApp'
              WebAppName: $(webAppName)
              packageForLinux: '$(Pipeline.Workspace)/drop/*.zip'  # Replace with your actual artifact path
              enableCustomDeployment: true

